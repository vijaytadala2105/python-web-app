name: CI - Build and Push to ECR (POC)

on:
  push:
    tags:
      - 'v*'
    branches:
      - main   # Trigger only on pushes to master branc
env:
  AWS_REGION: ${{ secrets.REGION }}
  ECR_REPOSITORY:  ${{ secrets.ECR_REPO }}
  ECR_REPO_NAME:  ${{ secrets.ECR_REPO_NAME }}
  ROLE_ARN:  ${{ secrets.ROLE_ARN }}
permissions:
  id-token: write   # Required for OIDC authentication
  contents: read    # Required for actions/checkout

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC - POC Account)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build, tag, and push Docker image to ECR (POC)
        env:
          ECR_REGISTRY: ${{ env.ECR_REPOSITORY }}
          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Docker
          docker build -f Docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "Pushing Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "Also tagging as latest..."
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
