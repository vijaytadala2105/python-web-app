name: CD - Deploy to ECS via CDK (POC)

on:
  push:
    branches:
      - master   # Deploy on pushes to master
  workflow_dispatch:  # Allow manual trigger from GitHub UI

permissions:
  contents: read    # Checkout code

jobs:
  deploy:
    # If you run in a self-hosted AWS runner, replace with:
    runs-on: [self-hosted, linux, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Install prerequisites (Node + Python + build tools)
      - name: Install base dependencies
        run: |
          sudo apt update -y
          sudo apt install -y nodejs npm python3 python3-pip python3-venv \
                              build-essential libssl-dev libffi-dev python3-dev jq
          node -v
          python3 --version

      # 3️⃣ Install AWS CDK CLI globally (for synth/deploy)
      - name: Install AWS CDK
        run: |
          sudo npm install -g aws-cdk
          cdk --version

      # 4️⃣ Cache pip packages to speed up installs
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 5️⃣ Create and activate Python virtual environment
      - name: Setup Python virtual environment
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt --timeout 600
        working-directory: ./aws_cdk     # ⬅️ adjust to your CDK app folder

      # 7️⃣ Synthesize CDK stack (generate CloudFormation template)
      - name: CDK Synth
        run: |
          source .venv/bin/activate
          cdk synth
        working-directory: ./aws_cdk

      # 8️⃣ Deploy CDK stack (ECS Rolling Update)
      - name: CDK Deploy
        env:
          AWS_REGION: us-east-1
        run: |
          source .venv/bin/activate
          cdk deploy --require-approval=never
        working-directory: ./aws_cdk










